install-go:
  stage: install-environment
  script:
    - export CURRENT_BUILD_PATH=$(pwd)
    - echo $PATH
    - rm -rf $HOME/golang
    - rm -rf $HOME/gopath
    - mkdir -p $HOME/golang # for GOROOT (contains the Go binary & core packages)
    - mkdir -p $HOME/gopath # for GOPATH (contains code and external packages)
    - curl http://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz 2>/dev/null > go1.5.2.linux-amd64.tar.gz
    - tar -C $HOME/golang -xzf go1.5.2.linux-amd64.tar.gz
    - export GOROOT=$HOME/golang/go
    - export GOPATH=$HOME/gopath
    - export PATH=$PATH:$GOROOT/bin
    - export PATH=$PATH:$GOPATH/bin
    - (if [[ "$(go version)" == *"go version go1.5"* ]]; then echo "âœ“ Go binary installed!"; else echo "Go binary not installed"; exit -1; fi);
    - go version
    - echo $PATH
    - go env
    - which go

image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - build
  - lint
  - test
  - pact-publish
  - package
  - deploy


build:
  stage: build
  script:
    - go build

lint:
  stage: lint
  script:
    - golangci-lint run -c .config/.golangci.yaml -v

test:
  stage: test
  before_script:
  - go get -u https://golang.org/doc/install
  script:
    - go test ./...
    - CGO_ENABLED=0 go test -v test/pact/provider_test.go

package:
  stage: package
  before_script:
  - docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASS
  script:
    - docker build -t ozdemirmustafa/backend-app:latest .
    - docker push ozdemirmustafa/backend-app:latest


 
