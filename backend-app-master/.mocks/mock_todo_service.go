// Code generated by MockGen. DO NOT EDIT.
// Source: backend-app/handler (interfaces: TodoService)

// Package _mocks is a generated GoMock package.
package _mocks

import (
	model "backend-app/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTodoService is a mock of TodoService interface
type MockTodoService struct {
	ctrl     *gomock.Controller
	recorder *MockTodoServiceMockRecorder
}

// MockTodoServiceMockRecorder is the mock recorder for MockTodoService
type MockTodoServiceMockRecorder struct {
	mock *MockTodoService
}

// NewMockTodoService creates a new mock instance
func NewMockTodoService(ctrl *gomock.Controller) *MockTodoService {
	mock := &MockTodoService{ctrl: ctrl}
	mock.recorder = &MockTodoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTodoService) EXPECT() *MockTodoServiceMockRecorder {
	return m.recorder
}

// AddTodoListItem mocks base method
func (m *MockTodoService) AddTodoListItem(arg0 string) (model.TodoItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTodoListItem", arg0)
	ret0, _ := ret[0].(model.TodoItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTodoListItem indicates an expected call of AddTodoListItem
func (mr *MockTodoServiceMockRecorder) AddTodoListItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTodoListItem", reflect.TypeOf((*MockTodoService)(nil).AddTodoListItem), arg0)
}

// DeleteTodoItem mocks base method
func (m *MockTodoService) DeleteTodoItem(arg0 int) (model.TodoItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTodoItem", arg0)
	ret0, _ := ret[0].(model.TodoItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTodoItem indicates an expected call of DeleteTodoItem
func (mr *MockTodoServiceMockRecorder) DeleteTodoItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTodoItem", reflect.TypeOf((*MockTodoService)(nil).DeleteTodoItem), arg0)
}

// GetTodoList mocks base method
func (m *MockTodoService) GetTodoList() ([]model.TodoList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodoList")
	ret0, _ := ret[0].([]model.TodoList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTodoList indicates an expected call of GetTodoList
func (mr *MockTodoServiceMockRecorder) GetTodoList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodoList", reflect.TypeOf((*MockTodoService)(nil).GetTodoList))
}

// UpdateItemCompleted mocks base method
func (m *MockTodoService) UpdateItemCompleted(arg0 int, arg1 bool) (model.TodoItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateItemCompleted", arg0, arg1)
	ret0, _ := ret[0].(model.TodoItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateItemCompleted indicates an expected call of UpdateItemCompleted
func (mr *MockTodoServiceMockRecorder) UpdateItemCompleted(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateItemCompleted", reflect.TypeOf((*MockTodoService)(nil).UpdateItemCompleted), arg0, arg1)
}
